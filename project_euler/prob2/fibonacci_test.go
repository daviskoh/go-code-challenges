package prob2_test

import (
	. "github.com/daviskoh/go-code-challenges/project_euler/prob2"

	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
)

/**
* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
* By starting with 1 and 2, the first 10 terms will be:

   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

var _ = Describe("Fibonacci", func() {
	It("considers a sequence to start at 1", func() {
		Expect(Fibonacci(1)).To(Equal(1))
	})

	It("considers 2 as the next value", func() {
		Expect(Fibonacci(2)).To(Equal(2))
	})

	It("handles a simple case", func() {
		Expect(Fibonacci(3)).To(Equal(3))
	})

	It("handles a slightly more complex case", func() {
		Expect(Fibonacci(4)).To(Equal(5))
		Expect(Fibonacci(5)).To(Equal(8))
	})
})
